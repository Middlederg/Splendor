@page "/main"

<div class="flex flex-col xl:justify-center lg:flex-row">

    <div class="flex lg:flex-col m-4 shadow-md">

        @foreach (var player in game.OtherPlayers(game.Players[0]))
        {
            <PlayerCard Player="player" />
        }
    </div>

    <Board Deck="game.Deck" />
    <MarketBoard Market="game.Market" OnGemClicked="GemClicked" />
    <NobilityBoard NobilityBox="game.NobilityBox" />
</div>

<div class="flex items-center justify-center">

    @if (selectedGems != null)
    {

        @foreach (var gem in selectedGems)
        {
            <RemovableToken Gem="gem" OnRemoved="GemRemoved" />
        }
    }
</div>

<button class="btn btn-primary">Click me</button>

<span data-tooltip="Tooltip text">
    Hover on me to see tooltip
</span>

@code {
    private Game game;
    private List<Gem> selectedGems;

    protected override void OnInitialized()
    {
        game = new Game(Prestige.FromScalar(15),
            (Avatars.Danilo, ColorFactory.Red),
            (Avatars.Debra, ColorFactory.Purple),
            (Avatars.Donnie, ColorFactory.Orange),
            (Avatars.Frankie, ColorFactory.Yellow));

        selectedGems = new List<Gem>();
    }


    private void GemClicked(Gem gem)
    {
        selectedGems.Add(gem);
    }

    private void GemRemoved(Gem gem)
    {
        selectedGems.Remove(gem);
    }
}
